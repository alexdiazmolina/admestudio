{"remainingRequest":"/Users/martinperez/Documents/workspace/vue-now-ui-kit/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/martinperez/Documents/workspace/vue-now-ui-kit/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/martinperez/Documents/workspace/vue-now-ui-kit/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/martinperez/Documents/workspace/vue-now-ui-kit/src/layout/MainNavbar.vue?vue&type=template&id=4473e1c5&scoped=true&","dependencies":[{"path":"/Users/martinperez/Documents/workspace/vue-now-ui-kit/src/layout/MainNavbar.vue","mtime":1621720618904},{"path":"/Users/martinperez/Documents/workspace/vue-now-ui-kit/node_modules/cache-loader/dist/cjs.js","mtime":1621660194664},{"path":"/Users/martinperez/Documents/workspace/vue-now-ui-kit/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1621660203282},{"path":"/Users/martinperez/Documents/workspace/vue-now-ui-kit/node_modules/cache-loader/dist/cjs.js","mtime":1621660194664},{"path":"/Users/martinperez/Documents/workspace/vue-now-ui-kit/node_modules/vue-loader/lib/index.js","mtime":1621660203282}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}