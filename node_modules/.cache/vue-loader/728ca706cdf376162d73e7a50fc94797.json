{"remainingRequest":"/home/mar7in91/Workspace/admestudio/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/mar7in91/Workspace/admestudio/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mar7in91/Workspace/admestudio/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mar7in91/Workspace/admestudio/src/layout/MainNavbar.vue?vue&type=template&id=4473e1c5&scoped=true&","dependencies":[{"path":"/home/mar7in91/Workspace/admestudio/src/layout/MainNavbar.vue","mtime":1625376093830},{"path":"/home/mar7in91/Workspace/admestudio/node_modules/cache-loader/dist/cjs.js","mtime":1625376092999},{"path":"/home/mar7in91/Workspace/admestudio/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1625376093669},{"path":"/home/mar7in91/Workspace/admestudio/node_modules/cache-loader/dist/cjs.js","mtime":1625376092999},{"path":"/home/mar7in91/Workspace/admestudio/node_modules/vue-loader/lib/index.js","mtime":1625376093669}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}